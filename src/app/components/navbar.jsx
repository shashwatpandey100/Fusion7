"use client"
import React, { useState } from 'react'
import { HiViewGrid } from "react-icons/hi";
import { IoCloseOutline } from "react-icons/io5";
import { motion, AnimatePresence } from 'framer-motion'


const navbar = () => {
    let [navbarOpen, setNavbarOpen] = useState(false);
    let [navbarShow, setNavbarShow] = useState(true);

    // hiding navbar on scroll down and showing on scroll up
    if (typeof window !== "undefined") {
        let prevScrollpos = window.scrollY;
        window.onscroll = function () {
            let currentScrollPos = window.scrollY;
            if (prevScrollpos > currentScrollPos) {
                setNavbarShow(true)
            }
            else if (prevScrollpos < 30) {
                setNavbarShow(true)
            }
            else {
                setNavbarShow(false)
            }
            prevScrollpos = currentScrollPos;
        }
    }

    const BlurryFade = {
        hidden: {
            x: '30vw',
            y: '-90vh',
            scale : 0.2,
        },
        visible: {
            x: 0,
            y: 0,
            scale : 1,
            transition: {
                duration: 0.3,
            }
        },
        exit: {
            x: '30vw',
            y: '-90vh',
            scale: 0.2,
            opacity: 0,
            filter: 'blur(10px)',
            transition: {
                duration: 0.3,
            }
        }
    }

    return (
        <>
            <section>
                {/* navbar part : blur + logo + right menu button */}
                {/* blur part */}
                <div className={`w-screen h-[54px] fixed ${navbarShow ? 'top-0' : 'top-[-54px]'} duration-1000 z-[10] bg-[hsla(0,0%,100%,.5)] backdrop-filter backdrop-blur-[5px]`}></div>
                {/* logo part */}
                <div className={`w-screen h-[54px] fixed ${navbarShow ? 'top-0' : 'top-[-54px]'} duration-1000 z-[11] flex justify-between items-center px-10`}>
                    {/* logo */}
                    <svg className="cursor-pointer" width="105" viewBox="0 0 147 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g clipRule="url(#logo-light-clip-path)"><path fillRule="evenodd" clipRule="evenodd" d="M75.2875 7.50344C74.6477 6.28017 73.6493 5.28172 72.426 4.64189C73.6483 4.00344 74.6466 3.00714 75.2875 1.78613C75.9254 3.00739 76.922 4.00401 78.1433 4.64189C76.9211 5.28115 75.9243 6.27991 75.2875 7.50344ZM39.997 3.66674H43.2329V15.0898C43.2329 16.9442 43.5986 18.3518 44.33 19.2805C45.0613 20.2092 46.1873 20.659 47.7342 20.659C49.2811 20.659 50.4332 20.2092 51.1646 19.2805C51.8959 18.3518 52.2906 16.9442 52.2906 15.0898V3.66674H55.5266V14.9185C55.5266 17.7336 54.8504 19.8725 53.5299 21.3352C52.2094 22.7979 50.2649 23.5293 47.7255 23.5293C45.1861 23.5293 43.2503 22.7979 41.956 21.3352C40.6616 19.8725 39.9883 17.7336 39.9883 14.9185L39.997 3.66674ZM65.7394 8.7862C67.4284 8.7862 68.8331 9.3202 69.904 10.3621C70.9749 11.404 71.535 13.1192 71.535 15.4264V23.361H68.4645V15.5947C68.4645 14.2452 68.1569 13.2033 67.5939 12.472C67.0308 11.7406 66.1573 11.404 65.0341 11.404C64.494 11.3771 63.9552 11.4776 63.4611 11.6974C62.9671 11.9172 62.5316 12.2501 62.19 12.6693C61.5167 13.5139 61.1771 14.637 61.1771 16.1026V23.3581H58.1385V8.95453H60.7853L61.122 10.841C62.19 9.48853 63.7398 8.7862 65.7394 8.7862ZM73.7349 8.95453V23.361H76.7677V8.95453H73.7349ZM79.191 23.361V3.66674H82.2238V15.9894L88.8088 8.95453H92.3263L86.9514 14.7589L92.6629 23.3697H89.0613L84.7864 16.9849L82.2238 19.6868V23.3726L79.191 23.361ZM95.7857 22.6296C96.9796 23.2214 98.2941 23.5294 99.6267 23.5294C100.959 23.5294 102.274 23.2214 103.468 22.6296C104.565 22.0379 105.465 21.138 106.056 20.0409C106.692 18.8468 107.012 17.5101 106.985 16.1578C107.008 14.8233 106.689 13.5052 106.056 12.3298C105.465 11.2265 104.566 10.319 103.468 9.71781C102.279 9.10817 100.963 8.7902 99.6267 8.7902C98.2909 8.7902 96.9743 9.10817 95.7857 9.71781C94.6877 10.319 93.7883 11.2265 93.1969 12.3298C92.5742 13.5077 92.2644 14.8258 92.2972 16.1578C92.2615 17.5076 92.5711 18.8443 93.1969 20.0409C93.7879 21.1376 94.6867 22.0375 95.7828 22.6296H95.7857ZM102.707 19.6172C102.329 20.0544 101.856 20.4005 101.325 20.6297C100.794 20.8588 100.218 20.9651 99.6398 20.9405C98.3454 20.9405 97.3325 20.5197 96.5751 19.6172C95.8176 18.7146 95.4142 17.5653 95.4142 16.1578C95.4142 14.7502 95.7799 13.6241 96.5751 12.7245C96.9476 12.2788 97.4179 11.9251 97.9495 11.6911C98.4811 11.457 99.0595 11.3488 99.6398 11.3749C100.219 11.3559 100.796 11.4673 101.327 11.7009C101.858 11.9344 102.33 12.2842 102.707 12.7245C103.518 13.6802 103.939 14.9057 103.889 16.1578C103.938 17.4181 103.516 18.6517 102.704 19.6172H102.707ZM116.15 8.95453H116.818V11.7958H115.468C114.2 11.7958 113.3 12.2195 112.737 13.035C112.146 13.9555 111.851 15.0353 111.893 16.1287V23.361H108.86V8.95453H111.562L111.899 11.1225C112.284 10.4638 112.838 9.91975 113.504 9.54657C114.151 9.15187 115.024 8.95453 116.147 8.95453H116.15ZM129.953 10.3621C128.882 9.3202 127.478 8.7862 125.788 8.7862C123.792 8.7862 122.245 9.48853 121.174 10.841L120.837 8.95453H118.193V23.361H121.229V16.1055C121.229 14.6544 121.566 13.5168 122.242 12.6722C122.918 11.8277 123.873 11.4069 125.083 11.4069C126.209 11.4069 127.051 11.7726 127.643 12.4749C128.235 13.1772 128.514 14.2481 128.514 15.5976V23.3639H131.578V15.4264C131.581 13.1192 131.018 11.4185 129.95 10.3621H129.953ZM133.279 18.6043H136.204C136.226 18.9725 136.332 19.3309 136.512 19.6526C136.693 19.9743 136.944 20.2509 137.246 20.4617C137.991 20.9648 138.879 21.2123 139.777 21.1669C140.55 21.1982 141.317 21.0229 142 20.659C142.259 20.5257 142.477 20.3241 142.631 20.0761C142.784 19.8282 142.867 19.5431 142.871 19.2515C142.882 19.0515 142.853 18.8513 142.785 18.6628C142.717 18.4743 142.612 18.3014 142.476 18.1545C142.161 17.9102 141.797 17.7378 141.408 17.6495C140.738 17.4985 140.059 17.3851 139.376 17.3099C138.32 17.2136 137.274 17.0193 136.254 16.7295C135.498 16.5153 134.816 16.0965 134.283 15.5193C133.778 14.9562 133.552 14.2249 133.552 13.2672C133.532 12.4337 133.79 11.6173 134.283 10.9454C134.819 10.243 135.527 9.69034 136.338 9.34053C137.283 8.9545 138.297 8.76302 139.318 8.7775C141.121 8.7775 142.612 9.20122 143.736 9.98771C144.284 10.3758 144.737 10.8844 145.059 11.4745C145.381 12.0645 145.564 12.7204 145.593 13.392H142.647C142.604 13.0711 142.494 12.7628 142.325 12.4869C142.155 12.211 141.93 11.9736 141.663 11.79C141.017 11.3383 140.243 11.1064 139.455 11.1283C138.708 11.091 137.967 11.2661 137.316 11.6332C137.066 11.7657 136.858 11.9645 136.714 12.2077C136.57 12.451 136.496 12.7292 136.5 13.0118C136.482 13.1954 136.508 13.3809 136.577 13.5522C136.646 13.7235 136.755 13.8757 136.895 13.9956C137.2 14.2285 137.556 14.3839 137.934 14.4484C138.329 14.5325 139.005 14.6167 139.931 14.7386C140.991 14.8396 142.038 15.0477 143.056 15.3597C143.84 15.5957 144.543 16.0436 145.088 16.654C145.593 17.2345 145.845 18.0326 145.845 19.0454C145.851 19.907 145.575 20.7469 145.059 21.4368C144.486 22.1413 143.74 22.6844 142.894 23.0127C141.904 23.3835 140.854 23.5647 139.797 23.5467C137.856 23.5467 136.28 23.123 135.099 22.2523C134.522 21.8377 134.054 21.2889 133.737 20.6534C133.419 20.0178 133.261 19.3146 133.276 18.6043H133.279Z" fill="black"></path></g><path fill-rule="evenodd" clipRule="evenodd" d="M21.9278 0H0V14.4819L21.9278 0ZM10.4074 24H24V2.11931L10.4074 24Z" fill="black"></path><defs><clipPath id="logo-light-clip-path"><rect width="106.286" height="24" fill="white" transform="translate(39.998)"></rect></clipPath></defs></svg>
                    {/* menu button */}
                    <div className='flex items-center cursor-pointer gap-2' onClick={() => setNavbarOpen(true)}>
                        <span className='text-sm'>Menu</span>
                        <span className='w-[32px] h-[32px] border border-slate-500 rounded-full flex items-center justify-center hover:bg-black hover:text-white duration-500'><HiViewGrid className='text-xl' /></span>
                    </div>
                </div>


                {/* drop-down part : drop-down + black shade */}
                {/* black shade */}
                <div className={`w-screen h-screen bg-[rgba(0,0,0,0.3)] z-[12] fixed top-0 right-0 ${navbarOpen ? 'block' : 'hidden'}`} onClick={() => setNavbarOpen(false)}></div>

                {/* dropdown */}
                <AnimatePresence>
                    {
                        navbarOpen &&
                        <motion.div
                            variants={BlurryFade}
                            initial="hidden"
                            animate="visible"
                            exit="exit"
                            className={`w-[460px] h-[565px] rounded-[2vw] z-[13] bg-white fixed top-0 right-0 mt-1 mr-8 text-[black] ${navbarOpen ? 'block' : 'hidden'}`}>
                            {/* top */}
                            <div className='relative'>
                                <span className='absolute top-2 right-2 w-[32px] h-[32px] border border-slate-500 rounded-full flex items-center justify-center hover:bg-black hover:text-white duration-500 cursor-pointer' onClick={() => setNavbarOpen(false)}><IoCloseOutline className='text-xl' /></span>
                            </div>
                        </motion.div>
                    }
                </AnimatePresence>
            </section>

        </>
    )
}

export default navbar